#------------------------------------------------------------------------------#
#  DFTB+: general package for performing fast atomistic simulations            #
#  Copyright (C) 2018  DFTB+ developers group                                  #
#                                                                              #
#  See the LICENSE file for terms of usage and distribution.                   #
#------------------------------------------------------------------------------#

################################################################################
# Building & installing
################################################################################

# target executables
TARGETS = dftb+

# Default target (declared *before* importing global makefiles).
.PHONY: all
all: $(TARGETS)

# Include common makefile
SRCDIRS := $(ROOT)/prog/dftb+/prg_dftb
SRCDIRS += $(wildcard $(ROOT)/prog/dftb+/lib_*)
SRCDIRS += $(ROOT)/prog/dftb+/include
INCDIRS := $(ROOT)/prog/dftb+/include
include $(ROOT)/prog/dftb+/make.common

# Target definitions (declared *after* importing necessary makefiles).
dftb+: $(dftbplus.o)
	$(link-target)


install: $(TARGETS)
	mkdir -p $(INSTALLDIR)/bin
	chmod a+x $^
	cp -p $^ $(INSTALLDIR)/bin

################################################################################
# Testing
################################################################################
TESTDIR := $(ROOT)/test/prog/dftb+
TESTFILE := $(TESTDIR)/tests

# Autotest working directory
AUTOTEST_WORKDIR := _autotest

# Where to put processed testfile
PROCESSED_TESTFILE := _tests

# Program to use for running and comparing
AUTOTEST_SCRIPT := $(TESTDIR)/bin/autotest2
TAGDIFF_SCRIPT := $(TESTDIR)/bin/tagdiff

# Complete command with options
AUTOTEST_CMD := $(AUTOTEST_SCRIPT) -r $(TESTDIR) -w $(AUTOTEST_WORKDIR) \
	        -d $(TAGDIFF_SCRIPT)

# Get list of tests to execute, but only if test is specified as goal
CREATE_PRETESTFILE := $(if $(filter test,$(MAKECMDGOALS)),\
	$(shell $(ROOT)/utils/test/testlist_to_fypp < $(TESTFILE) > $(PROCESSED_TESTFILE).fypp),)
CREATE_TESTFILE := $(if $(filter test,$(MAKECMDGOALS)),\
	$(shell $(FYPP) $(FYPPOPT) $(inc-opts) -DMPI_PROCS=$(TEST_MPI_PROCS) -DOMP_THREADS=$(TEST_OMP_THREADS) $(PROCESSED_TESTFILE).fypp > $(PROCESSED_TESTFILE)),)
TESTS := $(if $(filter test,$(MAKECMDGOALS)),\
	$(shell $(AUTOTEST_CMD) -f $(PROCESSED_TESTFILE) -l),)


.PHONY: $(TESTS) test

# Prepare and run individual tests, possibly in parallel.
$(TESTS):
	@$(AUTOTEST_CMD) -P "$(TESTRUNNER)" -p ./dftb+ -Q "$(POSTRUN)" -s P,R \
            $(AUTOTEST_FLAGS) $@

# Run calculations and immediately compare (possibly in parallel),
# then summarize.  The dependency ensures proper sequencing.
test: AUTOTEST_FLAGS = -s C -v
test: $(TESTS)
	@$(AUTOTEST_CMD) -s S $(TESTS)

testclean:
	rm -rf $(AUTOTEST_WORKDIR)
