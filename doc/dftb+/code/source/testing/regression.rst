***************************
Regression testing in DFTB+
***************************

The regression tests for the DFTB+ programs are located below the main
directory in the `app/` folder::
  
  test/
  ├── app
  │   ├── dftb+
  │   ├── modes
  │   └── phonons
  ├── src
  │   └── dftbp
  └── tools
      └── dptools

Each application directory contains a file `tests` which lists the
test cases for that program. The applicability of the tests (parallel,
serial, binary requirements, etc.) is controlled by the file.

Adding new test cases
---------------------

The DFTB+ binary's regression tests are controlled by the list of
cases in `test/app/dftb+/tests`. This has pre-processing macros, which
should be relatively self-explanatory, to control under which
conditions each test can run. For example::

  hybrid/cluster/C18H12-force-lc                     #? not WITH_MPI

corresponds to a test located in::

  test/
  ├── app
  │   ├── dftb+
  │   ├── hybrid
  │   │   │   ├── cluster
  │   │   │   │   ├── C18H12-force-lc
  
which cannot be run for MPI enabled code.

Each test directory contains the input file(s) and the tagged output
of the code, which is stored as `_autotest.tag` (this file is renamed
from the `autotest.tag` file generated by DFTB+). To generate the
initial tests, and also for the test cases to run, you need the
`dftb_in.hsd` file to contain::

  Options {
    WriteAutotestTag = Yes
  }

You also should set which version of the parser this input is for, at
current this is::

  ParserOptions {
    ParserVersion = 14
  }


Adding new tested quantities
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

If you need to regression test extra quantities, outside of the
existing ones, edit the file `src/dftbp/io/taggedoutput.F90` to add a
new unique string name in the `TTagLabelsEnum` structure.

Then to generate tagged output, you need to call the tag writer
routine. There are examples in the subroutine `writeAutotestTag()`
inside `src/dftbp/dftbplus/mainio.F90` but the call to the writer can
be made outside of this routine (or if the quantity is available in
`main.F90`, can be passed into it). To write tagged data from
elsewhere, something like::
  
  use dftbp_common_file, only : TFileDescr, openFile, closeFile
  use dftbp_dftbplus_outputfiles, only : autotestTag
  use dftbp_io_taggedoutput, only : TTaggedWriter, tagLabels

  type(TFileDescr) :: fd

  call openFile(fd, autotestTagFile, mode="a")
  call taggedWriter%write(fd%unit, tagLabels%dqdV, dqOutTmp)
  call closeFile(fd)

will work. Note that the file is opened in append mode, to avoid
overwriting existing test data.
